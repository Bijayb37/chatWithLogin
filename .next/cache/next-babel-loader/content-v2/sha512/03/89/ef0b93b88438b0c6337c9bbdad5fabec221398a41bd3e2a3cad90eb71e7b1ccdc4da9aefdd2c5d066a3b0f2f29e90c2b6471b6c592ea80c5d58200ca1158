{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Home.module.css';\nimport useToggle from './useToggle';\n\nfunction Login(props) {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  var _useContext2 = useContext(MainContext),\n      username = _useContext2.username,\n      setUsername = _useContext2.setUsername,\n      room = _useContext2.room,\n      setRoom = _useContext2.setRoom;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      snackbar = _useToggle2[0],\n      toggle = _useToggle2[1];\n\n  var _useState = useState([]),\n      snacks = _useState[0],\n      setSnacks = _useState[1];\n\n  var _useState2 = useState([]),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    socket.on(\"users\", function (us, rm) {\n      console.log(us, rm);\n      addSnack(us, rm);\n    });\n    socket.on(\"chat message\", function (msg) {\n      console.log(\"here\");\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [msg]);\n      });\n    });\n  }, []);\n\n  var addSnack = function addSnack(username, room) {\n    setSnacks(function (prev) {\n      return [].concat(_toConsumableArray(prev), [{\n        username: username,\n        room: room\n      }]);\n    });\n  };\n\n  var handleClick = function handleClick() {\n    console.log(username, room);\n    socket.emit(\"login\", {\n      username: username,\n      room: room\n    }, function (error) {\n      if (error) {\n        return console.log(error);\n      }\n    });\n    socket.emit(\"chat message\", username);\n  };\n\n  var mapped = snacks.map(function (snack, i) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(styles.snackbar, \" \").concat(styles.show),\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [snack.username, \" Logged In\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this);\n  });\n  var maps = messages.map(function (m) {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: mapped\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"roomInput\",\n      children: \"Room Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: function onChange(e) {\n        return setUsername(e.target.value);\n      },\n      id: \"roomInput\",\n      type: \"text\",\n      className: styles.roomInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nameInput\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: function onChange(e) {\n        return setRoom(e.target.value);\n      },\n      id: \"nameInput\",\n      type: \"text\",\n      className: styles.nameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"eR86CAaClclyPb2/2eA47X+zj1E=\", false, function () {\n  return [useToggle];\n});\n\n_c = Login;\nexport default _c2 = /*#__PURE__*/memo(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js"],"names":["memo","useContext","useEffect","useState","SocketContext","MainContext","styles","useToggle","Login","props","socket","username","setUsername","room","setRoom","snackbar","toggle","snacks","setSnacks","messages","setMessages","on","us","rm","console","log","addSnack","msg","prev","handleClick","emit","error","mapped","map","snack","i","show","maps","m","container","e","target","value","roomInput","nameInput"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,aAA3C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AAAA,oBACCR,UAAU,CAACG,aAAD,CADX;AAAA,MACVM,MADU,eACVA,MADU;;AAAA,qBAE+BT,UAAU,CAACI,WAAD,CAFzC;AAAA,MAEVM,QAFU,gBAEVA,QAFU;AAAA,MAEAC,WAFA,gBAEAA,WAFA;AAAA,MAEaC,IAFb,gBAEaA,IAFb;AAAA,MAEmBC,OAFnB,gBAEmBA,OAFnB;;AAAA,mBAGSP,SAAS,CAAC,KAAD,CAHlB;AAAA;AAAA,MAGXQ,QAHW;AAAA,MAGDC,MAHC;;AAAA,kBAIUb,QAAQ,CAAC,EAAD,CAJlB;AAAA,MAIXc,MAJW;AAAA,MAIHC,SAJG;;AAAA,mBAKcf,QAAQ,CAAC,EAAD,CALtB;AAAA,MAKXgB,QALW;AAAA,MAKDC,WALC;;AAOlBlB,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,MAAM,CAACW,EAAP,CAAU,OAAV,EAAmB,UAACC,EAAD,EAAKC,EAAL,EAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,EAAhB;AACAG,MAAAA,QAAQ,CAACJ,EAAD,EAAKC,EAAL,CAAR;AACH,KAHD;AAIAb,IAAAA,MAAM,CAACW,EAAP,CAAU,cAAV,EAA0B,UAACM,GAAD,EAAS;AAC/BH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAL,MAAAA,WAAW,CAAC,UAAAQ,IAAI;AAAA,4CAAQA,IAAR,IAAcD,GAAd;AAAA,OAAL,CAAX;AACH,KAHD;AAIH,GATQ,EASN,EATM,CAAT;;AAWA,MAAMD,QAAQ,GAAG,SAAXA,QAAW,CAACf,QAAD,EAAWE,IAAX,EAAoB;AACjCK,IAAAA,SAAS,CAAC,UAAAU,IAAI;AAAA,0CAAQA,IAAR,IAAc;AAACjB,QAAAA,QAAQ,EAARA,QAAD;AAAWE,QAAAA,IAAI,EAAJA;AAAX,OAAd;AAAA,KAAL,CAAT;AACH,GAFD;;AAKA,MAAMgB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBL,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ,EAAsBE,IAAtB;AACAH,IAAAA,MAAM,CAACoB,IAAP,CAAY,OAAZ,EAAqB;AAACnB,MAAAA,QAAQ,EAARA,QAAD;AAAWE,MAAAA,IAAI,EAAJA;AAAX,KAArB,EAAuC,UAAAkB,KAAK,EAAI;AAC5C,UAAIA,KAAJ,EAAW;AACP,eAAOP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAAP;AACH;AACJ,KAJD;AAKArB,IAAAA,MAAM,CAACoB,IAAP,CAAY,cAAZ,EAA4BnB,QAA5B;AACH,GARD;;AAUA,MAAIqB,MAAM,GAAGf,MAAM,CAACgB,GAAP,CAAW,UAACC,KAAD,EAAOC,CAAP;AAAA,wBAChB;AAAa,MAAA,SAAS,YAAK7B,MAAM,CAACS,QAAZ,cAAwBT,MAAM,CAAC8B,IAA/B,CAAtB;AAAA,6BACI;AAAA,mBAAKF,KAAK,CAACvB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUwB,CAAV;AAAA;AAAA;AAAA;AAAA,aADgB;AAAA,GAAX,CAAb;AAMA,MAAIE,IAAI,GAAGlB,QAAQ,CAACc,GAAT,CAAa,UAACK,CAAD,EAAO;AAC3B;AAAA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACH,GAFU,CAAX;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEhC,MAAM,CAACiC,SAAvB;AAAA,4BACI;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAO,MAAA,QAAQ,EAAE,kBAACQ,CAAD;AAAA,eAAO5B,WAAW,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,OAAjB;AAAqD,MAAA,EAAE,EAAC,WAAxD;AAAoE,MAAA,IAAI,EAAC,MAAzE;AAAgF,MAAA,SAAS,EAAEpC,MAAM,CAACqC;AAAlG;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAO,MAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,eAAO1B,OAAO,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,OAAjB;AAAiD,MAAA,EAAE,EAAC,WAApD;AAAgE,MAAA,IAAI,EAAC,MAArE;AAA4E,MAAA,SAAS,EAAEpC,MAAM,CAACsC;AAA9F;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAEf,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAvDQrB,K;UAGsBD,S;;;KAHtBC,K;AAyDT,kCAAeR,IAAI,CAACQ,KAAD,CAAnB","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Home.module.css'\nimport useToggle from './useToggle'\n\nfunction Login(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [snackbar, toggle] = useToggle(false)\n    const [snacks, setSnacks] = useState([])\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        socket.on(\"users\", (us, rm) => {\n            console.log(us, rm)\n            addSnack(us, rm)\n        })\n        socket.on(\"chat message\", (msg) => {\n            console.log(\"here\")\n            setMessages(prev => [...prev, msg])\n        })\n    }, [])\n\n    const addSnack = (username, room) => {\n        setSnacks(prev => [...prev, {username, room}])\n    }\n\n    \n    const handleClick = () => {\n        console.log(username, room)\n        socket.emit(\"login\", {username, room}, error => {\n            if (error) {\n                return console.log(error)\n            }\n        })\n        socket.emit(\"chat message\", username)\n    }\n\n    let mapped = snacks.map((snack,i) => (\n            <div key={i} className={`${styles.snackbar} ${styles.show}` }>\n                <h2>{snack.username} Logged In</h2>\n            </div>\n    ))\n\n    let maps = messages.map((m) => {\n        <h1>{m}</h1>\n    })\n\n    return (\n        <div className={styles.container}>\n            <div>\n                {mapped}\n            </div>\n            <label htmlFor=\"roomInput\">Room Name</label>\n            <input onChange={(e) => setUsername(e.target.value)} id=\"roomInput\" type=\"text\" className={styles.roomInput} />\n            <label htmlFor=\"nameInput\">Username</label>\n            <input onChange={(e) => setRoom(e.target.value)} id=\"nameInput\" type=\"text\" className={styles.nameInput} />\n            <button onClick={handleClick}>Click me</button>\n        </div>\n    )\n}\n\nexport default memo(Login)"]},"metadata":{},"sourceType":"module"}