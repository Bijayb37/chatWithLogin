{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Home.module.css';\nimport useToggle from './useToggle';\nimport Toast from \"./Toast\";\n\nfunction Login(props) {\n  _s();\n\n  var _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  var _useContext2 = useContext(MainContext),\n      username = _useContext2.username,\n      setUsername = _useContext2.setUsername,\n      room = _useContext2.room,\n      setRoom = _useContext2.setRoom;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      snackbar = _useToggle2[0],\n      toggle = _useToggle2[1];\n\n  var _useState = useState([]),\n      toastList = _useState[0],\n      setToastList = _useState[1];\n\n  var _useState2 = useState([]),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    socket.on(\"users\", function (us, rm) {\n      setToastList(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          username: us,\n          room: rm\n        }]);\n      });\n    });\n    socket.on(\"chat message\", function (msg) {\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [msg]);\n      });\n    });\n  }, []);\n\n  var removeToast = function removeToast(username) {\n    setToastList(function (prev) {\n      return prev.filter(function (t) {\n        return t.username !== username;\n      });\n    });\n  };\n\n  var handleClick = function handleClick() {\n    socket.emit(\"login\", {\n      username: username,\n      room: room\n    }, function (error) {\n      if (error) {\n        return console.log(error);\n      }\n\n      socket.emit(\"chat message\", username);\n    });\n  }; // let mapped = snacks.map((snack, i) => (\n  //     <div key={i} className={`${styles.snackbar} ${styles.show}`}>\n  //         <h2>{snack.username} Logged In    {30 * i}</h2>\n  //     </div>\n  // ))\n  // let maps = messages.map((m,i) => {\n  //     return <h1 key={i}>{m}</h1>\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roomInput\",\n        children: \"Room Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: function onChange(e) {\n          return setUsername(e.target.value);\n        },\n        id: \"roomInput\",\n        type: \"text\",\n        className: styles.roomInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameInput\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: function onChange(e) {\n          return setRoom(e.target.value);\n        },\n        id: \"nameInput\",\n        type: \"text\",\n        className: styles.nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        toastList: toastList,\n        removeToast: removeToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"rj7u4IPKLINLRZBgo1nSDX6KTu8=\", false, function () {\n  return [useToggle];\n});\n\n_c = Login;\nexport default _c2 = /*#__PURE__*/memo(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js"],"names":["memo","useContext","useEffect","useState","SocketContext","MainContext","styles","useToggle","Toast","Login","props","socket","username","setUsername","room","setRoom","snackbar","toggle","toastList","setToastList","messages","setMessages","on","us","rm","prev","msg","removeToast","filter","t","handleClick","emit","error","console","log","container","e","target","value","roomInput","nameInput"],"mappings":"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","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Home.module.css'\nimport useToggle from './useToggle'\nimport Toast from \"./Toast\"\n\nfunction Login(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [snackbar, toggle] = useToggle(false)\n    const [toastList, setToastList] = useState([])\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        socket.on(\"users\", (us, rm) => {\n            setToastList(prev => [...prev, { username: us, room: rm }])\n        })\n        socket.on(\"chat message\", (msg) => {\n            setMessages(prev => [...prev, msg])\n        })\n    }, [])        \n\n    const removeToast = (username) => {\n        setToastList(prev => prev.filter((t) => t.username !== username))\n    }\n\n    const handleClick = () => {\n        socket.emit(\"login\", { username, room }, error => {\n            if (error) {\n                return console.log(error)\n            }\n            socket.emit(\"chat message\", username)\n        })\n\n    }\n\n    // let mapped = snacks.map((snack, i) => (\n    //     <div key={i} className={`${styles.snackbar} ${styles.show}`}>\n    //         <h2>{snack.username} Logged In    {30 * i}</h2>\n    //     </div>\n    // ))\n\n    // let maps = messages.map((m,i) => {\n    //     return <h1 key={i}>{m}</h1>\n    // })\n\n    return (\n        <div>\n            <div className={styles.container}>\n                <div>\n                    {/* {mapped} */}\n                </div>\n                <label htmlFor=\"roomInput\">Room Name</label>\n                <input onChange={(e) => setUsername(e.target.value)} id=\"roomInput\" type=\"text\" className={styles.roomInput} />\n                <label htmlFor=\"nameInput\">Username</label>\n                <input onChange={(e) => setRoom(e.target.value)} id=\"nameInput\" type=\"text\" className={styles.nameInput} />\n                <button onClick={handleClick}>Click me</button>\n            </div>\n            <div>\n                <Toast toastList={toastList} removeToast={removeToast}/>\n                <h1>Hello</h1>\n                {/* {maps} */}\n            </div>\n        </div>\n    )\n}\n\nexport default memo(Login)"]},"metadata":{},"sourceType":"module"}