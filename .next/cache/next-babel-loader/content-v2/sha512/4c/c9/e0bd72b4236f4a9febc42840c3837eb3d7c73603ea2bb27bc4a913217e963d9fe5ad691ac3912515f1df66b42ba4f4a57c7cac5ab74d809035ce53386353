{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Home.module.css';\nimport useToggle from './useToggle';\nexport default function Login(props) {\n  const {\n    socket\n  } = useContext(SocketContext);\n  const {\n    username,\n    setUsername,\n    room,\n    setRoom\n  } = useContext(MainContext);\n  const [snackbar, toggle] = useToggle(false);\n  const {\n    0: snacks,\n    1: setSnacks\n  } = useState([]);\n  const {\n    0: tex,\n    1: setTex\n  } = useState(\"hsadasds\");\n  useEffect(() => {\n    socket.on(\"users\", (us, rm) => {\n      console.log(\"emmitting\"); // addSnack(us, rm)\n\n      helloKitty();\n    });\n  }, []);\n\n  function helloKitty() {\n    console.log(username, room);\n  }\n\n  const addSnack = (use, rom) => {\n    console.log(username, room);\n    setSnacks(prev => [...prev, {\n      username,\n      room\n    }]);\n    setTimeout(() => {// setSnacks(prev => prev.filter((s) => s.username === use ))\n    }, 4000);\n  };\n\n  const handleClick = () => {\n    console.log(username, room);\n    socket.emit(\"login\", {\n      username,\n      room\n    }, error => {\n      if (error) {\n        return console.log(error);\n      }\n    });\n  };\n\n  let mapped = snacks.map((snack, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.snackbar} ${styles.show}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Logged In \", snack.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: mapped\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"roomInput\",\n      children: \"Room Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUsername(e.target.value),\n      id: \"roomInput\",\n      type: \"text\",\n      className: styles.roomInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nameInput\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setRoom(e.target.value),\n      id: \"nameInput\",\n      type: \"text\",\n      className: styles.nameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js"],"names":["useContext","useEffect","useRef","useState","SocketContext","MainContext","styles","useToggle","Login","props","socket","username","setUsername","room","setRoom","snackbar","toggle","snacks","setSnacks","tex","setTex","on","us","rm","console","log","helloKitty","addSnack","use","rom","prev","setTimeout","handleClick","emit","error","mapped","map","snack","i","show","container","e","target","value","roomInput","nameInput"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useRef, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Home.module.css'\nimport useToggle from './useToggle'\n\nexport default function Login(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [snackbar, toggle] = useToggle(false)\n    const [snacks, setSnacks] = useState([])\n    const [tex, setTex] = useState(\"hsadasds\")\n\n    useEffect(() => {\n        socket.on(\"users\", (us, rm) => {\n            console.log(\"emmitting\")\n            // addSnack(us, rm)\n            helloKitty()\n        })\n\n    }, [])\n\n    function helloKitty() {\n        console.log(username, room)\n    }\n\n    const addSnack = (use, rom) => {\n        console.log(username, room)\n        setSnacks(prev => [...prev, {username, room}])\n        setTimeout(() => {\n            // setSnacks(prev => prev.filter((s) => s.username === use ))\n        }, 4000)\n\n    }\n\n    const handleClick = () => {\n        console.log(username, room)\n        socket.emit(\"login\", {username, room}, error => {\n            if (error) {\n                return console.log(error)\n            }\n        })\n  \n    }\n\n    let mapped = snacks.map((snack,i) => (\n            <div key={i} className={`${styles.snackbar} ${styles.show}` }>\n                <h2>Logged In {snack.username}</h2>\n                <p>User logged in</p>\n            </div>\n    ))\n\n    return (\n        <div className={styles.container}>\n            {/* <div onClick={() => alert(\"wasup\")} className={snackbar ? `${styles.snackbar} ${styles.show}` : styles.snackbar}>\n                <h2>Logged In</h2>\n                <p>User logged in</p>\n            </div> */}\n            <div>\n                {mapped}\n            </div>\n            <label htmlFor=\"roomInput\">Room Name</label>\n            <input onChange={(e) => setUsername(e.target.value)} id=\"roomInput\" type=\"text\" className={styles.roomInput} />\n            <label htmlFor=\"nameInput\">Username</label>\n            <input onChange={(e) => setRoom(e.target.value)} id=\"nameInput\" type=\"text\" className={styles.nameInput} />\n            <button onClick={handleClick}>Click me</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}