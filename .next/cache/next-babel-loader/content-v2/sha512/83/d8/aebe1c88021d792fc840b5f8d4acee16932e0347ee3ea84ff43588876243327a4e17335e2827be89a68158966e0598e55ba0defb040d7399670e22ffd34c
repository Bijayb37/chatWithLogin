{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js\";\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Home.module.css';\nimport useToggle from './useToggle';\n\nfunction Login(props) {\n  const {\n    socket\n  } = useContext(SocketContext);\n  const {\n    username,\n    setUsername,\n    room,\n    setRoom\n  } = useContext(MainContext);\n  const [snackbar, toggle] = useToggle(false);\n  const {\n    0: snacks,\n    1: setSnacks\n  } = useState([]);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  useEffect(() => {\n    socket.on(\"users\", (us, rm) => {\n      console.log(us, rm);\n      addSnack(us, rm);\n    });\n  }, []);\n\n  const addSnack = (username, room) => {\n    setSnacks(prev => [...prev, {\n      username,\n      room\n    }]);\n  };\n\n  const handleClick = () => {\n    console.log(username, room);\n    socket.emit(\"login\", {\n      username,\n      room\n    }, error => {\n      if (error) {\n        return console.log(error);\n      }\n    });\n    socket.emit(\"chat message\", () => {});\n  };\n\n  let mapped = snacks.map((snack, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.snackbar} ${styles.show}`,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [snack.username, \" Logged In\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this));\n  let maps = messages.map(m => {\n    /*#__PURE__*/\n    _jsxDEV(\"h1\", {\n      children: m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: mapped\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"roomInput\",\n      children: \"Room Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUsername(e.target.value),\n      id: \"roomInput\",\n      type: \"text\",\n      className: styles.roomInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nameInput\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setRoom(e.target.value),\n      id: \"nameInput\",\n      type: \"text\",\n      className: styles.nameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\nexport default /*#__PURE__*/memo(Login);","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js"],"names":["memo","useContext","useEffect","useState","SocketContext","MainContext","styles","useToggle","Login","props","socket","username","setUsername","room","setRoom","snackbar","toggle","snacks","setSnacks","messages","setMessages","on","us","rm","console","log","addSnack","prev","handleClick","emit","error","mapped","map","snack","i","show","maps","m","container","e","target","value","roomInput","nameInput"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,aAA3C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaT,UAAU,CAACG,aAAD,CAA7B;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,MAA2Cb,UAAU,CAACI,WAAD,CAA3D;AACA,QAAM,CAACU,QAAD,EAAWC,MAAX,IAAqBT,SAAS,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACW,EAAP,CAAU,OAAV,EAAmB,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBC,EAAhB;AACAG,MAAAA,QAAQ,CAACJ,EAAD,EAAKC,EAAL,CAAR;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,QAAQ,GAAG,CAACf,QAAD,EAAWE,IAAX,KAAoB;AACjCK,IAAAA,SAAS,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;AAAChB,MAAAA,QAAD;AAAWE,MAAAA;AAAX,KAAV,CAAT,CAAT;AACH,GAFD;;AAKA,QAAMe,WAAW,GAAG,MAAM;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ,EAAsBE,IAAtB;AACAH,IAAAA,MAAM,CAACmB,IAAP,CAAY,OAAZ,EAAqB;AAAClB,MAAAA,QAAD;AAAWE,MAAAA;AAAX,KAArB,EAAuCiB,KAAK,IAAI;AAC5C,UAAIA,KAAJ,EAAW;AACP,eAAON,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAAP;AACH;AACJ,KAJD;AAKApB,IAAAA,MAAM,CAACmB,IAAP,CAAY,cAAZ,EAA4B,MAAM,CAEjC,CAFD;AAGH,GAVD;;AAYA,MAAIE,MAAM,GAAGd,MAAM,CAACe,GAAP,CAAW,CAACC,KAAD,EAAOC,CAAP,kBAChB;AAAa,IAAA,SAAS,EAAG,GAAE5B,MAAM,CAACS,QAAS,IAAGT,MAAM,CAAC6B,IAAK,EAA1D;AAAA,2BACI;AAAA,iBAAKF,KAAK,CAACtB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUuB,CAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAb;AAMA,MAAIE,IAAI,GAAGjB,QAAQ,CAACa,GAAT,CAAcK,CAAD,IAAO;AAC3B;AAAA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACH,GAFU,CAAX;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE/B,MAAM,CAACgC,SAAvB;AAAA,4BACI;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAO,MAAA,QAAQ,EAAGQ,CAAD,IAAO3B,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;AAAqD,MAAA,EAAE,EAAC,WAAxD;AAAoE,MAAA,IAAI,EAAC,MAAzE;AAAgF,MAAA,SAAS,EAAEnC,MAAM,CAACoC;AAAlG;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAO,MAAA,QAAQ,EAAGH,CAAD,IAAOzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;AAAiD,MAAA,EAAE,EAAC,WAApD;AAAgE,MAAA,IAAI,EAAC,MAArE;AAA4E,MAAA,SAAS,EAAEnC,MAAM,CAACqC;AAA9F;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAEf,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;AAED,4BAAe5B,IAAI,CAACQ,KAAD,CAAnB","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Home.module.css'\nimport useToggle from './useToggle'\n\nfunction Login(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [snackbar, toggle] = useToggle(false)\n    const [snacks, setSnacks] = useState([])\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        socket.on(\"users\", (us, rm) => {\n            console.log(us, rm)\n            addSnack(us, rm)\n        })\n    }, [])\n\n    const addSnack = (username, room) => {\n        setSnacks(prev => [...prev, {username, room}])\n    }\n\n    \n    const handleClick = () => {\n        console.log(username, room)\n        socket.emit(\"login\", {username, room}, error => {\n            if (error) {\n                return console.log(error)\n            }\n        })\n        socket.emit(\"chat message\", () => {\n            \n        })\n    }\n\n    let mapped = snacks.map((snack,i) => (\n            <div key={i} className={`${styles.snackbar} ${styles.show}` }>\n                <h2>{snack.username} Logged In</h2>\n            </div>\n    ))\n\n    let maps = messages.map((m) => {\n        <h1>{m}</h1>\n    })\n\n    return (\n        <div className={styles.container}>\n            <div>\n                {mapped}\n            </div>\n            <label htmlFor=\"roomInput\">Room Name</label>\n            <input onChange={(e) => setUsername(e.target.value)} id=\"roomInput\" type=\"text\" className={styles.roomInput} />\n            <label htmlFor=\"nameInput\">Username</label>\n            <input onChange={(e) => setRoom(e.target.value)} id=\"nameInput\" type=\"text\" className={styles.nameInput} />\n            <button onClick={handleClick}>Click me</button>\n        </div>\n    )\n}\n\nexport default memo(Login)"]},"metadata":{},"sourceType":"module"}