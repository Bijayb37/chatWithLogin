{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { MainContext, UsersContext } from '../contexts';\nimport { useAppContext } from '../contexts/SocketContext';\nimport styles from '../styles/Chat.module.css';\nimport { useRouter } from 'next/router';\nimport Toast from '../Components/Toast';\nimport useToggle from '../Components/useToggle';\n\nfunction Chat(props) {\n  _s();\n\n  var _this = this;\n\n  var _useAppContext = useAppContext(),\n      socket = _useAppContext.socket;\n\n  var _useContext = useContext(MainContext),\n      username = _useContext.username,\n      setUsername = _useContext.setUsername,\n      room = _useContext.room,\n      setRoom = _useContext.setRoom;\n\n  var _useContext2 = useContext(UsersContext),\n      users = _useContext2.users,\n      setUsers = _useContext2.setUsers;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var _useState2 = useState(''),\n      newMessage = _useState2[0],\n      setNewMessage = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"Welcome \".concat(username),\n    message: \"to room \".concat(room)\n  }]),\n      toastList = _useState3[0],\n      setToastList = _useState3[1];\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      toggler = _useToggle2[0],\n      toggle = _useToggle2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!username) return router.push(\"/\");\n    router.beforePopState(function () {\n      logout();\n    });\n    socket.emit(\"second login\");\n    socket.on(\"toast\", function (us, rm) {\n      var meth = Math.floor(Math.random() * 101);\n      setToastList(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          id: meth,\n          title: \"\".concat(us),\n          message: \"has enterted room \".concat(rm)\n        }]);\n      });\n    });\n    socket.on(\"chat message\", function (msg) {\n      console.log(\"message sent\");\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [msg]);\n      });\n    });\n    socket.on(\"users\", function (allUsers) {\n      console.log(allUsers);\n      setUsers(allUsers);\n    });\n    socket.on(\"removal\", function (serverUsers) {\n      setUsers(serverUsers);\n    });\n    return function () {\n      return socket.disconnect();\n    };\n  }, []);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // setMessages((prevMessages) => [...prevMessages, { body: newMessage, id: socket.id }])\n\n    socket.emit(\"chat message\", {\n      body: newMessage,\n      id: socket.id\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setNewMessage(e.target.value);\n  };\n\n  var mapped = messages.map(function (m, i) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: m.body\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this);\n  });\n\n  var logout = function logout() {\n    setUsername('');\n    setRoom('');\n    router.push('/');\n    router.reload();\n  }; //remove Later\n  // const testie = () => {\n  //     let meth = Math.floor(Math.random() * 101)\n  //     setToastList(prev => [...prev, { id:meth, title: `what`, message: `has enterted room` }])\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        className: styles.dropdown,\n        children: \"Users Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nameContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: room || 'room'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: username || 'username'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        className: styles.button,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), toggler && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(function (user, i) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 49\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: mapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.newMessageForm,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: handleChange,\n            value: newMessage,\n            className: styles.newMessageBox,\n            placeholder: \"type new message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: styles.messageButton,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        toastList: toastList,\n        setToastList: setToastList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"D4puZQ3ObP6y2bChGEdaBkFRo+Q=\", false, function () {\n  return [useAppContext, useToggle, useRouter];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx"],"names":["useContext","useEffect","useState","MainContext","UsersContext","useAppContext","styles","useRouter","Toast","useToggle","Chat","props","socket","username","setUsername","room","setRoom","users","setUsers","messages","setMessages","newMessage","setNewMessage","title","message","toastList","setToastList","toggler","toggle","router","push","beforePopState","logout","emit","on","us","rm","meth","Math","floor","random","prev","id","msg","console","log","prevMessages","allUsers","serverUsers","disconnect","handleSubmit","e","preventDefault","body","handleChange","target","value","mapped","map","m","i","reload","chatContainer","header","dropdown","nameContainer","button","user","mainBody","messages2","newMessageForm","newMessageBox","messageButton"],"mappings":"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","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { MainContext, UsersContext } from '../contexts'\nimport { useAppContext } from '../contexts/SocketContext'\nimport styles from '../styles/Chat.module.css'\nimport { useRouter } from 'next/router'\nimport Toast from '../Components/Toast'\nimport useToggle from '../Components/useToggle'\n\nfunction Chat(props) {\n    const { socket } = useAppContext()\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const { users, setUsers } = useContext(UsersContext)\n    const [messages, setMessages] = useState([])\n    const [newMessage, setNewMessage] = useState('')\n    const [toastList, setToastList] = useState([{ title: `Welcome ${username}`, message: `to room ${room}` }])\n    const [toggler, toggle] = useToggle(false)\n    const router = useRouter()\n\n    useEffect(() => {\n        if (!username) return router.push(\"/\")\n        router.beforePopState(() => {\n            logout()\n        })\n        socket.emit(\"second login\")\n        socket.on(\"toast\", (us, rm) => {\n            let meth = Math.floor(Math.random() * 101)\n            setToastList(prev => [...prev, { id: meth, title: `${us}`, message: `has enterted room ${rm}` }])\n        })\n\n        socket.on(\"chat message\", (msg) => {\n            console.log(\"message sent\")\n            setMessages((prevMessages) => [...prevMessages, msg])\n        })\n\n        socket.on(\"users\", (allUsers) => {\n            console.log(allUsers)\n            setUsers(allUsers)\n        })\n\n        socket.on(\"removal\", (serverUsers) => {\n            setUsers(serverUsers)\n        })\n\n        return () => (\n            socket.disconnect()\n        )\n    }, [])\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // setMessages((prevMessages) => [...prevMessages, { body: newMessage, id: socket.id }])\n        socket.emit(\"chat message\",\n            {\n                body: newMessage,\n                id: socket.id\n            }\n        )\n    }\n\n    const handleChange = (e) => {\n        setNewMessage(e.target.value)\n    }\n\n    const mapped = messages.map((m, i) => (\n        <h1 key={i}>{m.body}</h1>\n    ))\n\n    const logout = () => {\n        setUsername(''); setRoom('');\n        router.push('/')\n        router.reload()\n    }\n    //remove Later\n    // const testie = () => {\n    //     let meth = Math.floor(Math.random() * 101)\n    //     setToastList(prev => [...prev, { id:meth, title: `what`, message: `has enterted room` }])\n    // }\n\n    return (\n        <div className={styles.chatContainer}>\n            <div className={styles.header}>\n                <button onClick={toggle} className={styles.dropdown}>Users Logged In</button>\n                <div className={styles.nameContainer}>\n                    <h1>{room || 'room'}</h1>\n                    <p>{username || 'username'}</p>\n                </div>\n                <button onClick={logout} className={styles.button}>Log Out</button>\n            </div>\n            {//remove Later}\n}\n            {/* <div>\n                <button onClick={testie} >Sensei</button>\n            </div> */}\n            {toggler &&\n                <div>\n                    <h1>header</h1>\n                    <ul>\n                        {users.map((user, i) => <li key={i}>{user.username}</li>)}\n                    </ul>\n                </div>\n            }\n\n            <div className={styles.mainBody}>\n                <div className={styles.messages}>\n                    {mapped}\n                </div>\n                <div className={styles.messages2}>\n                    <form className={styles.newMessageForm}>\n                        <textarea onChange={handleChange} value={newMessage} className={styles.newMessageBox} placeholder=\"type new message here\" />\n                        <button onClick={handleSubmit} className={styles.messageButton}>\n                            Submit\n                    </button>\n                    </form>\n                </div>\n            </div>\n            <div>\n                <Toast toastList={toastList} setToastList={setToastList} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}