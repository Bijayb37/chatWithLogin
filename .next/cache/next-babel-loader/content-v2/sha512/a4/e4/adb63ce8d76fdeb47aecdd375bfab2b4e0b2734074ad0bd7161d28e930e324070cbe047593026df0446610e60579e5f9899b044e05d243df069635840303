{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/bijaybohora/Documents/100 days/roomChat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { MainContext, UsersContext } from '../contexts';\nimport { useAppContext } from '../contexts/SocketContext';\nimport styles from '../styles/Chat.module.css';\nimport { useRouter } from 'next/router';\nimport Toast from '../Components/Toast';\nimport useToggle from '../Components/useToggle';\n\nfunction Chat(props) {\n  _s();\n\n  var _this = this;\n\n  var _useAppContext = useAppContext(),\n      socket = _useAppContext.socket;\n\n  var _useContext = useContext(MainContext),\n      username = _useContext.username,\n      setUsername = _useContext.setUsername,\n      room = _useContext.room,\n      setRoom = _useContext.setRoom;\n\n  var _useContext2 = useContext(UsersContext),\n      users = _useContext2.users,\n      setUsers = _useContext2.setUsers;\n\n  var _useState = useState([]),\n      messages = _useState[0],\n      setMessages = _useState[1];\n\n  var _useState2 = useState(''),\n      newMessage = _useState2[0],\n      setNewMessage = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"Welcome \".concat(username),\n    message: \"to room \".concat(room)\n  }]),\n      toastList = _useState3[0],\n      setToastList = _useState3[1];\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      toggler = _useToggle2[0],\n      toggle = _useToggle2[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    // if (!username) return router.push(\"/\")\n    // router.beforePopState(() => {\n    //     logout()\n    // })\n    // socket.emit(\"second login\")\n    // socket.on(\"toast\", (us, rm) => {\n    //     let meth = Math.floor(Math.random() * 101)\n    //     setToastList(prev => [...prev, { id: meth, title: `${us}`, message: `has enterted room ${rm}` }])\n    // })\n    // socket.on(\"chat message\", (msg) => {\n    //     console.log(\"message sent\")\n    //     setMessages((prevMessages) => [...prevMessages, msg])\n    // })\n    // socket.on(\"users\", (allUsers) => {\n    //     setUsers(allUsers)\n    // })\n    // socket.on(\"removal\", (serverUsers, serverUser) => {\n    //     setUsers(serverUsers)\n    //     let meth = Math.floor(Math.random() * 101)\n    //     setToastList(prev => [...prev, { id: meth, title: `${serverUser.username}`, message: \"has left the room\" }])\n    // })\n    return function () {\n      return socket.disconnect();\n    };\n  }, []);\n  useEffect(function () {}, []);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setMessages(function (prevMessages) {\n      return [].concat(_toConsumableArray(prevMessages), [{\n        body: newMessage,\n        id: socket.id\n      }]);\n    });\n    socket.emit(\"chat message\", {\n      body: newMessage,\n      id: socket.id\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setNewMessage(e.target.value);\n  };\n\n  var mapped = messages.map(function (m, i) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: m.body\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, _this);\n  });\n\n  var logout = function logout() {\n    setUsername('');\n    setRoom('');\n    router.push('/');\n    router.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        className: styles.dropdown,\n        children: \"Users Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nameContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Room \".concat(room) || 'room'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: username || 'username'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        className: styles.button,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), toggler && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(function (user, i) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 49\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: mapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.newMessageForm,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: handleChange,\n            value: newMessage,\n            className: styles.newMessageBox,\n            placeholder: \"type new message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: styles.messageButton,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        toastList: toastList,\n        setToastList: setToastList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"2V/nXDXIt9O9WXO6KTzDTq9HDMk=\", false, function () {\n  return [useAppContext, useToggle, useRouter];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx"],"names":["useContext","useEffect","useState","MainContext","UsersContext","useAppContext","styles","useRouter","Toast","useToggle","Chat","props","socket","username","setUsername","room","setRoom","users","setUsers","messages","setMessages","newMessage","setNewMessage","title","message","toastList","setToastList","toggler","toggle","router","disconnect","handleSubmit","e","preventDefault","prevMessages","body","id","emit","handleChange","target","value","mapped","map","m","i","logout","push","reload","chatContainer","header","dropdown","nameContainer","button","user","mainBody","messages2","newMessageForm","newMessageBox","messageButton"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { MainContext, UsersContext } from '../contexts'\nimport { useAppContext } from '../contexts/SocketContext'\nimport styles from '../styles/Chat.module.css'\nimport { useRouter } from 'next/router'\nimport Toast from '../Components/Toast'\nimport useToggle from '../Components/useToggle'\n\nfunction Chat(props) {\n    const { socket } = useAppContext()\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const { users, setUsers } = useContext(UsersContext)\n    const [messages, setMessages] = useState([])\n    const [newMessage, setNewMessage] = useState('')\n    const [toastList, setToastList] = useState([{ title: `Welcome ${username}`, message: `to room ${room}` }])\n    const [toggler, toggle] = useToggle(false)\n    const router = useRouter()\n\n    useEffect(() => {\n        // if (!username) return router.push(\"/\")\n        // router.beforePopState(() => {\n        //     logout()\n        // })\n        // socket.emit(\"second login\")\n        // socket.on(\"toast\", (us, rm) => {\n        //     let meth = Math.floor(Math.random() * 101)\n        //     setToastList(prev => [...prev, { id: meth, title: `${us}`, message: `has enterted room ${rm}` }])\n        // })\n\n        // socket.on(\"chat message\", (msg) => {\n        //     console.log(\"message sent\")\n        //     setMessages((prevMessages) => [...prevMessages, msg])\n        // })\n\n        // socket.on(\"users\", (allUsers) => {\n        //     setUsers(allUsers)\n        // })\n\n        // socket.on(\"removal\", (serverUsers, serverUser) => {\n        //     setUsers(serverUsers)\n        //     let meth = Math.floor(Math.random() * 101)\n        //     setToastList(prev => [...prev, { id: meth, title: `${serverUser.username}`, message: \"has left the room\" }])\n        // })\n\n        return () => (\n            socket.disconnect()\n        )\n    }, [])\n\n    useEffect(() => {\n\n    }, [])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setMessages((prevMessages) => [...prevMessages, { body: newMessage, id: socket.id }])\n        socket.emit(\"chat message\",\n            {\n                body: newMessage,\n                id: socket.id\n            }\n        )\n    }\n\n    const handleChange = (e) => {\n        setNewMessage(e.target.value)\n    }\n\n    const mapped = messages.map((m, i) => (\n        <h1 key={i}>{m.body}</h1>\n    ))\n\n    const logout = () => {\n        setUsername(''); setRoom('');\n        router.push('/')\n        router.reload()\n    }\n\n    return (\n        <div className={styles.chatContainer}>\n            <div className={styles.header}>\n                <button onClick={toggle} className={styles.dropdown}>Users Logged In</button>\n                <div className={styles.nameContainer}>\n                    <h1>{`Room ${room}` || 'room'}</h1>\n                    <p>{username || 'username'}</p>\n                </div>\n                <button onClick={logout} className={styles.button}>Log Out</button>\n            </div>\n            {toggler &&\n                <div>\n                    <h1>header</h1>\n                    <ul>\n                        {users.map((user, i) => <li key={i}>{user.username}</li>)}\n                    </ul>\n                </div>\n            }\n\n            <div className={styles.mainBody}>\n                <div className={styles.messages}>\n                    {mapped}\n                </div>\n                <div className={styles.messages2}>\n                    <form className={styles.newMessageForm}>\n                        <textarea onChange={handleChange} value={newMessage} className={styles.newMessageBox} placeholder=\"type new message here\" />\n                        <button onClick={handleSubmit} className={styles.messageButton}>\n                            Submit\n                    </button>\n                    </form>\n                </div>\n            </div>\n            <div>\n                <Toast toastList={toastList} setToastList={setToastList} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}