{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js\";\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Home.module.css';\nimport useToggle from './useToggle';\nimport Toast from \"./Toast\";\n\nfunction Login(props) {\n  const {\n    socket\n  } = useContext(SocketContext);\n  const {\n    username,\n    setUsername,\n    room,\n    setRoom\n  } = useContext(MainContext);\n  const [snackbar, toggle] = useToggle(false);\n  const {\n    0: snacks,\n    1: setSnacks\n  } = useState([]);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  useEffect(() => {\n    let interval;\n    socket.on(\"users\", (us, rm) => {\n      // addSnack(us, rm)\n      setSnacks(prev => [...prev, {\n        username: us,\n        room: rm\n      }]);\n      interval = setTimeout(() => {\n        setSnacks(prev => prev.filter(s => s[0].username !== snacks[0].username));\n      }, 3000);\n    });\n    socket.on(\"chat message\", msg => {\n      console.log(\"here\");\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      clearTimeout(interval);\n    };\n  }, [snacks]);\n  useEffect(() => {\n    let interval = setTimeout(() => {\n      setSnacks(prev => prev.filter(s => s[0].username !== snacks[0].username));\n    }, 3000);\n    clearTimeout(interval);\n  }, [snacks]);\n\n  const addSnack = (username, room) => {};\n\n  console.log(snacks);\n\n  const handleClick = () => {\n    socket.emit(\"login\", {\n      username,\n      room\n    }, error => {\n      if (error) {\n        return console.log(error);\n      }\n\n      socket.emit(\"chat message\", username);\n    });\n  };\n\n  let mapped = snacks.map((snack, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.snackbar} ${styles.show}`,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [snack.username, \" Logged In    \", 30 * i]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this));\n  let maps = messages.map((m, i) => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: m\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: mapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roomInput\",\n        children: \"Room Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUsername(e.target.value),\n        id: \"roomInput\",\n        type: \"text\",\n        className: styles.roomInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameInput\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setRoom(e.target.value),\n        id: \"nameInput\",\n        type: \"text\",\n        className: styles.nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\nexport default /*#__PURE__*/memo(Login);","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/Components/Login.js"],"names":["memo","useContext","useEffect","useState","SocketContext","MainContext","styles","useToggle","Toast","Login","props","socket","username","setUsername","room","setRoom","snackbar","toggle","snacks","setSnacks","messages","setMessages","interval","on","us","rm","prev","setTimeout","filter","s","msg","console","log","clearTimeout","addSnack","handleClick","emit","error","mapped","map","snack","i","show","maps","m","container","e","target","value","roomInput","nameInput"],"mappings":"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","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Home.module.css'\nimport useToggle from './useToggle'\nimport Toast from \"./Toast\"\n\nfunction Login(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [snackbar, toggle] = useToggle(false)\n    const [snacks, setSnacks] = useState([])\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        let interval\n        socket.on(\"users\", (us, rm) => {\n            // addSnack(us, rm)\n            setSnacks(prev => [...prev, { username: us, room: rm }])\n            interval = setTimeout(() => {\n                setSnacks(prev => prev.filter((s) => s[0].username !== snacks[0].username))\n            }, 3000)\n        })\n        socket.on(\"chat message\", (msg) => {\n            console.log(\"here\")\n            setMessages(prev => [...prev, msg])\n        })\n        return  () => {\n            clearTimeout(interval)\n        }\n    }, [snacks])\n\n    useEffect(() => {\n        let interval = setTimeout(() => {\n            setSnacks(prev => prev.filter((s) => s[0].username !== snacks[0].username))\n        }, 3000)\n        clearTimeout(interval)\n    }, [snacks])\n\n    const addSnack = (username, room) => {\n\n    }\n\n    console.log(snacks)\n    const handleClick = () => {\n        socket.emit(\"login\", { username, room }, error => {\n            if (error) {\n                return console.log(error)\n            }\n            socket.emit(\"chat message\", username)\n        })\n\n    }\n\n    let mapped = snacks.map((snack, i) => (\n        <div key={i} className={`${styles.snackbar} ${styles.show}`}>\n            <h2>{snack.username} Logged In    {30 * i}</h2>\n        </div>\n    ))\n\n    let maps = messages.map((m,i) => {\n        return <h1 key={i}>{m}</h1>\n    })\n\n    return (\n        <div>\n            <div className={styles.container}>\n                <div>\n                    {mapped}\n                </div>\n                <label htmlFor=\"roomInput\">Room Name</label>\n                <input onChange={(e) => setUsername(e.target.value)} id=\"roomInput\" type=\"text\" className={styles.roomInput} />\n                <label htmlFor=\"nameInput\">Username</label>\n                <input onChange={(e) => setRoom(e.target.value)} id=\"nameInput\" type=\"text\" className={styles.nameInput} />\n                <button onClick={handleClick}>Click me</button>\n            </div>\n            <div>\n                <h1>Hello</h1>\n                {/* {maps} */}\n            </div>\n        </div>\n    )\n}\n\nexport default memo(Login)"]},"metadata":{},"sourceType":"module"}