{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx\";\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { SocketContext, MainContext } from '../contexts';\nimport styles from '../styles/Chat.module.css';\nimport Toast from \"../Components/Toast\";\nimport { useRouter } from 'next/router';\n\nfunction Chat(props) {\n  const {\n    socket\n  } = useContext(SocketContext);\n  const {\n    username,\n    setUsername,\n    room,\n    setRoom\n  } = useContext(MainContext);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: newMessage,\n    1: setNewMessage\n  } = useState('');\n  const {\n    0: toastList,\n    1: setToastList\n  } = useState([]);\n  const router = useRouter();\n  useEffect(() => {\n    if (!username) return router.push(\"/\");\n  }, [username]);\n  useEffect(() => {\n    router.beforePopState(() => {\n      logout();\n    }); // socket.on(\"users\", (us, rm) => {\n    //     setToastList(prev => [...prev, { title: `Welcome ${us}`, message: `to room ${rm}`}])\n    // })\n    // socket.on(\"chat message\", (msg) => {\n    //     setMessages((prevMessages) => [...prevMessages, msg])\n    // })\n  }, []);\n\n  const removeToast = username => {\n    setToastList(prev => prev.filter(t => t.username !== username));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setMessages((prevMessages) => [...prevMessages, newMessage])\n\n    socket.emit(\"chat message\", {\n      body: newMessage,\n      id: socket.id\n    });\n  };\n\n  const handleChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const mapped = messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: m.body\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this));\n\n  const logout = () => {\n    setUsername('');\n    setRoom('');\n    router.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.dropdown,\n        children: \"Users Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nameContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: room || 'room'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: username || 'username'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        className: styles.button,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: mapped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.newMessageForm,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: handleChange,\n            value: newMessage,\n            className: styles.newMessageBox,\n            placeholder: \"type new message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: styles.messageButton,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        toastList: toastList,\n        removeToast: removeToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\nexport default /*#__PURE__*/memo(Chat);","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/roomChat/pages/chat.tsx"],"names":["memo","useContext","useEffect","useState","SocketContext","MainContext","styles","Toast","useRouter","Chat","props","socket","username","setUsername","room","setRoom","messages","setMessages","newMessage","setNewMessage","toastList","setToastList","router","push","beforePopState","logout","removeToast","prev","filter","t","handleSubmit","e","preventDefault","emit","body","id","handleChange","target","value","mapped","map","m","i","chatContainer","header","dropdown","nameContainer","button","mainBody","messages2","newMessageForm","newMessageBox","messageButton"],"mappings":"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","sourcesContent":["import { memo, useContext, useEffect, useState } from 'react'\nimport { SocketContext, MainContext } from '../contexts'\nimport styles from '../styles/Chat.module.css'\nimport Toast from \"../Components/Toast\"\nimport { useRouter } from 'next/router'\n\nfunction Chat(props) {\n    const { socket } = useContext(SocketContext)\n    const { username, setUsername, room, setRoom } = useContext(MainContext)\n    const [messages, setMessages] = useState([])\n    const [newMessage, setNewMessage] = useState('')\n    const [toastList, setToastList] = useState([])\n    const router = useRouter()\n\n\n\n    useEffect(() => { if (!username) return router.push(\"/\") }, [username])\n\n    useEffect(() => {\n        router.beforePopState(() => {\n            logout()\n        })\n        // socket.on(\"users\", (us, rm) => {\n        //     setToastList(prev => [...prev, { title: `Welcome ${us}`, message: `to room ${rm}`}])\n        // })\n        // socket.on(\"chat message\", (msg) => {\n        //     setMessages((prevMessages) => [...prevMessages, msg])\n        // })\n\n    }, [])\n\n    const removeToast = (username) => {\n        setToastList(prev => prev.filter((t) => t.username !== username))\n    }   \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // setMessages((prevMessages) => [...prevMessages, newMessage])\n        socket.emit(\"chat message\", \n            {\n                body: newMessage,\n                id: socket.id\n            }\n        )\n    }\n\n    const handleChange = (e) => {\n        setNewMessage(e.target.value)\n    }\n\n    const mapped = messages.map((m,i) => (\n        <h1 key={i}>{m.body}</h1>\n    ))\n\n    const logout = () => {\n        setUsername(''); setRoom('');\n        router.push('/')\n    }\n\n    return (\n        <div className={styles.chatContainer}>\n            <div className={styles.header}>\n                <button className={styles.dropdown}>Users Logged In</button>\n                <div className={styles.nameContainer}>\n                    <h1>{room || 'room'}</h1>\n                    <p>{username || 'username'}</p>\n                </div>\n                <button onClick={logout} className={styles.button}>Log Out</button>\n            </div>\n            <div className={styles.mainBody}>\n                <div className={styles.messages}>\n                    {mapped}\n                </div>\n                <div className={styles.messages2}>\n                    <form className={styles.newMessageForm}>\n                        <textarea onChange={handleChange} value={newMessage} className={styles.newMessageBox} placeholder=\"type new message here\" />\n                        <button onClick={handleSubmit} className={styles.messageButton}>\n                            Submit\n                    </button>\n                    </form>\n                </div>\n            </div>\n            <div>\n                <Toast toastList={toastList} removeToast={removeToast}/>\n            </div>\n        </div>\n    )\n}\n\nexport default memo(Chat)"]},"metadata":{},"sourceType":"module"}